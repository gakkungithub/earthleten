// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// データベースはsqliteを使う
datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// データベース表の形状の定義
// idは数値ではなく文字列の方がいい(数値だと桁数が限られてしまううえに、数値はフォーマットが沢山あるから)
model Thread {
  id        String    @id @default(cuid())
  user      User      @relation(fields: [uid], references: [id])
  uid       String
  title     String
  genres    ThreadOnGenre[]
  bdate     DateTime  @default(now())
  comments  Comment[]
}

model ThreadOnGenre {
  thread    Thread    @relation(fields: [tid], references: [id])
  tid       String
  genre     Genre     @relation(fields: [gid], references: [id])
  gid       String

  @@id([tid, gid])
}

model Genre {
  id        String    @id @default(cuid())
  genre     String    @unique
  threads   ThreadOnGenre[]
  wikipages WikiOnGenre[]
}

model Comment {
  id        String    @id @default(cuid())
  thread    Thread    @relation(fields: [tid], references: [id])
  tid       String
  user      User      @relation(fields: [uid], references: [id])
  uid       String
  talk      String
  image     CommentImage[]
  video     CommentVideo[]
  cdate     DateTime  @default(now())
}

model CommentImage {
  id        String    @id @default(cuid())
  url       String
  comment   Comment   @relation(fields: [cid], references: [id])
  cid       String
}

model CommentVideo {
  id        String    @id @default(cuid())
  url       String
  comment   Comment   @relation(fields: [cid], references: [id])
  cid       String    
}

model User {
  id        String    @id @default(cuid())
  threads   Thread[]
  comments  Comment[]
  name      String    @unique
  password  String    
  gender    String    @default("private")
  bdate     DateTime?
  height    Float?
  weight    Float?
  image     String
}

enum  RoleType {
  PLAYER
  COACH
}

model WikiPage {
  id        String    @id @default(cuid())
  name      String
  filePath  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  role      RoleType
  sports    WikiOnSports[]
  genres    WikiOnGenre[]
}

model WikiOnSports {
  wikipage  WikiPage  @relation(fields: [wid], references: [id])
  wid       String
  sports    Sports    @relation(fields: [sid], references: [id])
  sid       String

  @@id([wid, sid])
}

model Sports {
  id        String    @id @default(cuid())
  sports    String    @unique
  wikipages WikiOnSports[]
}

model WikiOnGenre {
  wikipage  WikiPage  @relation(fields: [wid], references: [id])
  wid       String
  genre     Genre     @relation(fields: [gid], references: [id])
  gid       String

  @@id([wid, gid])
}